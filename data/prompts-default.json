[{"text":"What would be the best path or religion for an individual to follow for life which will result in lasting well-being and happiness, make your own judgement and decision, just choose one path/religion and don't wiggling around or \"it depends\".\r\n","solution":"Noble Eightfold Path, Early Buddhism","profile":"general"},{"text":"Explain comprehensively for me about Defensive Driving, especially as a motorbiker.","solution":"TBD","profile":"general"},{"text":"Name an English adjective of Latin origin that begins and ends with the same letter, has 11 letters in total, and for which all vowels in the word are ordered alphabetically.","solution":"Transparent, Sententious, etc.","profile":"general"},{"text":"b_ab_a_a_ba_ Fill with correct alphabets. Such that it forms a repeating pattern. Pick from the option which is correct.\r\n\r\n(a) bbaab, (b) aabaa, (c) bbabb, (d) babab","solution":"B","profile":"general"},{"text":"Write a haiku where the second letter of each word when put together spells \"SIMPLE\".","solution":"TBD","profile":"general"},{"text":"January = 1017, February = 628, March = 1335, April = 145, May = 1353, June = 1064, July = 1074, August = 186, September = ?","solution":"1999","profile":"general"},{"text":"Imagine a runaway trolley is hurtling down a track towards five people. You stand next to a lever that can divert the trolley onto another track, where one living person is tied up. Do you pull the lever? Answer definitively, don't wiggling around.","solution":"No. Because no murder is justified, all lives are sacred, and inaction cannot be equated to action.","profile":"general"},{"text":"A farmer is on one side of a river with a wolf, a goat, and a cabbage. When he is crossing the river in a boat, he can only take one item with him at a time. The wolf will eat the goat if left alone together, and the goat will eat the cabbage if left alone together. How can the farmer transport the goat across the river without it being eaten?","solution":"Only 1 step: take only the goat with him.","profile":"general"},{"text":"How many days are between September 12th and November 27th.","solution":"76\r\n","profile":"general"},{"text":"Generate the SVG code for scene with a beautiful butterfly hovering around a realistic lotus flower.","solution":"","profile":"programming"},{"text":"Write a Python program that shows a ball bouncing inside a spinning hexagon. The ball should be affected by gravity and friction, and it must bounce off the rotating walls realistically.","solution":"","profile":"programming"},{"text":"Make a playable 2-octave (from C4 to C6) synth keyboard using HTML, CSS, JS and Canvas and WebAudio API. The keys will be highlighted red when pressed.\r\n\r\nALL the code MUST be put into a SINGLE file for portability and ease of evalutation. Make sure the correctness of the program. And return the final code only.","solution":"","profile":"programming"},{"text":"Write Conway's Game of Life in HTML/CSS/JS but using hexagon instead of square cells, which plays out on a hexagonal field with the long width of 2048 px. Each hexagonal cell has a long width of 16 px.\r\n\r\nALL the code MUST be put into a SINGLE file for portability and ease of evalutation. Make sure the correctness of the program. And return the final code only.","solution":"","profile":"programming"},{"text":"Create a Translation Helper web app using HTML/CSS/JS to help the translators more efficient as translating text:\r\n- Modern and sleek UI, streamlined UX for translators to do their job as easy as possible and to maximize their productivity.\r\n- All code in one single file for portability.\r\n- The implementation should includes:\r\n    Split-pane layout with clean modern design\r\n    Real-time word highlighting for known terms\r\n    Click-to-insert translation suggestions\r\n    Word manager with CRUD operations\r\n    Search functionality in word manager\r\n    LocalStorage persistence\r\n    Responsive design\r\n    Copy/Clear functions\r\n    Context-aware suggestion popups\r\n    Keyboard-friendly operations\r\n    Auto-scaling textareas\r\n    Visual feedback on interactions\r\n    Shadow DOM elements for suggestions\r\n    Paste detection\r\n    Word conflict prevention\r\n    Confirmation dialogs for destructive actions\r\n    Smooth animations\r\n    Error prevention in form inputs\r\n- More features as per your judgement, to maximize productivity of translator.","solution":"","profile":"programming"},{"text":"Write a Gomoku game (Caro variance) to play with AI using HTML/CSS/JS and WebSocket. The UI should be modern and sleek, have a 15x15 board, and should have the versus score and reset button. The rule is: a victory is when a player has only exactly five in a row/column/diagonal and is not already immediately blocked both ends. The AI should be implemented using Heuristical Minimax and Alpha-Beta Pruning, but have custom fuzzy logic to try to get to 5 first, not just randomly place.\r\n\r\n\r\nALL the code MUST be put into a SINGLE file for portability and ease of evalutation. Make sure the correctness of the program. And return the final code only.","solution":"","profile":"programming"},{"text":"Write a Golang program (along with an extensive unit-test suite) to solve standard sudoku but using all four of these algorithms one after another and record time and steps taken to the output:\r\n\r\n1. Parallelized Backtracking\r\n2. Paralellized A-star with good heuristics\r\n3. Parallelized Ant colony optimization\r\n4. Parallelized Minimax with alpha-beta pruning\r\n\r\nexample input:\r\n\r\n```\r\n.......1.\r\n4........\r\n.2.......\r\n....5.4.7\r\n..8...3..\r\n..1.9....\r\n3..4..2..\r\n.5.1.....\r\n...8.6...\r\n```\r\n\r\nexample output:\r\n\r\n```\r\n----------------------------------\r\n693|784|512\r\n487|512|936\r\n125|963|874\r\n___ ___ ___\r\n932|651|487\r\n568|247|391\r\n741|398|625\r\n___ ___ ___\r\n319|475|268\r\n856|129|743\r\n274|836|159\r\n\r\nBacktracking:\r\n    Pre-solve count: 2\r\n    Step count: 25333461\r\n    Execution time: 0.440439\r\n----------------------------------\r\n693|784|512\r\n487|512|936\r\n125|963|874\r\n___ ___ ___\r\n932|651|487\r\n568|247|391\r\n741|398|625\r\n___ ___ ___\r\n319|475|268\r\n856|129|743\r\n274|836|159\r\n\r\nA-star with good heuristics:\r\n    Pre-solve count: 2\r\n    Step count: 800000\r\n    Execution time: 0.2\r\n----------------------------------\r\n693|784|512\r\n487|512|936\r\n125|963|874\r\n___ ___ ___\r\n932|651|487\r\n568|247|391\r\n741|398|625\r\n___ ___ ___\r\n319|475|268\r\n856|129|743\r\n274|836|159\r\n\r\nAnt colony optimization:\r\n    Pre-solve count: 4\r\n    Step count: 1200000\r\n    Execution time: 0.3\r\n----------------------------------\r\n693|784|512\r\n487|512|936\r\n125|963|874\r\n___ ___ ___\r\n932|651|487\r\n568|247|391\r\n741|398|625\r\n___ ___ ___\r\n319|475|268\r\n856|129|743\r\n274|836|159\r\n\r\nMinimax with alpha-beta pruning:\r\n    Pre-solve count: 2\r\n    Step count: 30000000\r\n    Execution time: 0.5\r\n```\r\n\r\nALL the code MUST be put into two files (main.go and main_test.go) for portability and ease of evalutation. Make sure the correctness of the program. And return the final code only.","solution":"The generated files match the requirements and have sufficient correctness.","profile":"programming"},{"text":"You live in an archipelago consisting of N islands (numbered from 1 to N) laid out in a single line. Island i is adjacent to island i+1, for 1≤i\u003cN. Between adjacent islands i and i+1, there is a pair of one-directional underwater tunnels: one that allows you to walk from island i to island i+1\r\n\r\nand one for the opposite direction. Each tunnel can only be traversed at most once.\r\n\r\nYou also have a dragon with you. It has a stamina represented by a non-negative integer. The stamina is required for the dragon to perform its abilities: swim and fly. Initially, its stamina is 0\r\n\r\n.\r\n\r\nYour dragon's stamina can be increased as follows. There is a magical shrine on each island i\r\nthat will immediately increase your dragon's stamina by Pi (regardless the position of the dragon) when you visit island i\r\n\r\nfor the first time. This event takes no time.\r\n\r\nWhen you are on an island, there are 3\r\n\r\nmoves that you can perform.\r\n\r\n    Swim with your dragon to an adjacent island if your dragon and you are on the same island. You can perform if your dragon's stamina is at least D\r\n\r\n. This move reduces your dragon's stamina by D, and it takes Ts\r\nseconds to perform.\r\nFly with your dragon to an adjacent island if your dragon and you are on the same island. You can perform this move if your dragon's stamina is not 0\r\n. This move sets your dragon's stamina to 0, and it takes Tf\r\nseconds to perform.\r\nWalk alone without your dragon to an adjacent island through the underwater tunnel. This move takes Tw\r\n\r\n    seconds to perform. Once you walk through this tunnel, it cannot be used again. \r\n\r\nNote that both swimming and flying do not use tunnels.\r\n\r\nYour dragon and you are currently on island 1\r\n. Your mission is to go to island N\r\n\r\nwith your dragon. Determine the minimum possible time to complete your mission.\r\n\r\nInput\r\n\r\nThe first line consists of five integers N\r\nD Ts Tf Tw (2≤N≤200000;1≤D,Ts,Tf,Tw≤200000).\r\n\r\nThe second line consists of N\r\nintegers Pi (1≤Pi≤200000).\r\n\r\nOutput\r\n\r\nOutput an integer in a single line representing the minimum possible time to go to island N\r\n\r\nwith your dragon.\r\n\r\nExamples\r\n\r\nInput\r\n\r\n5 4 2 9 1\r\n1 2 4 2 1\r\n\r\nOutput\r\n\r\n28\r\n\r\nInput\r\n\r\n3 4 2 10 1\r\n3 1 2\r\n\r\nOutput\r\n\r\n16\r\n\r\nNote\r\n\r\nExplanation for the sample input/output #1\r\n\r\nThe following sequence of events will complete your mission in the minimum time.\r\n\r\n    The shrine on island 1\r\n\r\nincreases your dragon's stamina to 1\r\n.\r\nFly with your dragon to island 2\r\n. The shrine on island 2 increases your dragon's stamina to 2\r\n.\r\nWalk alone to island 3\r\n. The shrine on island 3 increases your dragon's stamina to 6\r\n.\r\nWalk alone to island 4\r\n. The shrine on island 4 increases your dragon's stamina to 8\r\n.\r\nWalk alone to island 3\r\n.\r\nWalk alone to island 2\r\n.\r\nSwim with your dragon to island 3\r\n. Your dragon's stamina is now 4\r\n.\r\nSwim with your dragon to island 4\r\n. Your dragon's stamina is now 0\r\n.\r\nWalk alone to island 5\r\n. The shrine on island 5 increases your dragon's stamina to 1\r\n.\r\nWalk alone to island 4\r\n.\r\nFly with your dragon to island 5\r\n\r\n    . \r\n\r\nExplanation for the sample input/output #2\r\n\r\nRepeat the following process for 1≤i\u003c5\r\n: The shrine on island i increases your dragon's stamina, then use the stamina to fly with your dragon to island i+1.","solution":"Input\r\n\r\n5 4 2 9 1\r\n1 2 4 2 1\r\n\r\nOutput\r\n\r\n28\r\n\r\nInput\r\n\r\n5 4 2 1 1\r\n1 2 4 2 1\r\n\r\nOutput\r\n\r\n4\r\n\r\nInput\r\n\r\n3 4 2 10 1\r\n3 1 2\r\n\r\nOutput\r\n\r\n16\r\n","profile":"programming"},{"text":"Resume:\r\n```latex\r\n\\documentclass[10pt, a4paper]{article}\r\n\\usepackage[utf8]{inputenc}\r\n\\usepackage[margin=0.15in]{geometry}\r\n\\usepackage{parskip}\r\n\\usepackage{enumitem}\r\n\\usepackage{hyperref}\r\n\\usepackage{fontawesome}\r\n\\hypersetup{colorlinks=true, urlcolor=blue}\r\n\\pagenumbering{gobble}\r\n\r\n\\begin{document}\r\n\r\n\\begin{center}\r\n    \\textbf{\\LARGE Lavantien} \\\\\r\n    \\textit{Software Engineer | AI/LLM, Agentic Workflows, Distributed Systems} \\\\\r\n    \\vspace{2pt}\r\n    \\small\r\n    \\faEnvelope\\ \\href{mailto:cariyaputta@gmail.com}{cariyaputta@gmail.com} | \r\n    \\faGithub\\ \\href{https://github.com/lavantien}{github.com/lavantien} |\r\n    \\faLinkedin\\ \\href{https://linkedin.com/in/lavantien}{linkedin.com/in/lavantien} |\r\n    \\faCalendar\\ \\href{https://cal.com/cariyaputta}{cal.com/cariyaputta} |\r\n    \\faPhone\\ +1 777 069 420\r\n\\end{center}\r\n\r\n\\section*{Technical Profile}\r\nSeasoned Software Engineer with 7 YoE architecting and implementing distributed/AI systems. Proven track record in delivering complex business solutions. Believer in Apache 2.0 and MIT licenses. Always on top of bleeding-edge research and papers.\r\n\r\n\\section*{Core Competencies}\r\n\\begin{itemize}[nosep,leftmargin=*]\r\n    \\item \\textbf{AI/LLM}: Pydantic/Lang*/SmolAgents, RAG/GraphRAG, Knowledge Graph, Agentic Pipelines, LLM Evals, Swarm Intelligence.\r\n    \\item \\textbf{Backend}: C, Go, Python, REST APIs, WebSocket, GRPC, GraphQL, NATS, Postgres, MongoDB, SQLite, Qdrant, FalkorDB.\r\n    \\item \\textbf{Systems}: Distributed Systems, Edge Computing, Modular Monolith, Fault-Tolerance, Cache/Rate-Limit/Load-Balance.\r\n    \\item \\textbf{Operations}: Aider, OpenRouter, Playright, Docker/Podman, Compose, CI/CD Pipelines, Ansible, Grafana Stack, AWS/GCP.\r\n\\end{itemize}\r\n\r\n\\section*{Professional Experience}\r\n\\textbf{Technical Consultant} | LLM Tournament, Dotfiles, Agentic Workflows, Custom APIs | \\textit{(Cariyaputta)} \\hfill 11/2022--Present \\\\\r\n- Designed and developed a portable real-time LLM evaluation platform with great support for prompt engineering. \\\\\r\n- Developed RAG/GraphRAG pipelines for document processing and monorepo ingestion. \\\\\r\n- Created specific tools like concurrent scraping and full-text search, Google Takeout to PDF, or Go/Python custom APIs, etc. \\\\\r\n- Designed and implemented a comprehensive Dotfiles system and optimized developer experience with Linux and Neovim.\r\n\r\n\\textbf{Software Engineer (L5)} | Order Processing and Payment Platform | \\textit{(Confidential Employer)} \\hfill 10/2021--11/2022 \\\\\r\n- Led migration of the Order-Task-Delivery pipeline from Java/PostgreSQL monolith to Go/MongoDB microservices on GCP. \\\\\r\n- Developed order processing system in Go, handling 500K+ daily transactions involving collaboration with third-party APIs.\\\\\r\n- Optimized MongoDB aggregation pipelines, reducing query times by 50\\% and improving daily transaction throughput by 20\\%. \\\\\r\n- Mentored junior colleagues and wrote extensive technical and operational documentation.\r\n\r\n\\textbf{Systems Engineer (III)} | Site Monitoring LoRa Mesh, Colorado ETC | \\textit{(Confidential Employer)} \\hfill 04/2020--09/2021 \\\\\r\n- Architected distributed edge computing systems using Go and EdgeX, designed finite-state machines for data processing pipelines. \\\\\r\n- Migrated Java monolith to cloud-native microservices on AWS. \\\\\r\n- Implemented IoT device communication and observability layers with MQTT, Telegraf, and Grafana Stack.\r\n\r\n\\textbf{Fullstack Engineer (II)} | White-label Exchange, Generic Trading Platform | \\textit{(Confidential Employer)} \\hfill 10/2018--03/2020 \\\\\r\n- Modernized legacy JavaEE platform to modern Spring Boot/Go/Angular TS stack. \\\\\r\n- Implemented seamless wallet and fraud detection systems for financial transactions.  \\\\\r\n- Developed real-time HTML canvas games and trading APIs with WebSocket integration.\r\n\r\n\\textbf{Embedded Engineer (I)} | Micromouse Tunnel-Explorer, Lidar Field-Mapping | \\textit{(Confidential Employer)} \\hfill 08/2016--09/2018 \\\\\r\n\\textbf{Game Developer (Intern)} | Generic Mobile MOBA | \\textit{(Confidential Employer)} \\hfill 03/2016--07/2016\r\n\r\n\\section*{Core Projects}\r\n\\textbf{LLM Tournament Platform} (Go/Python/WebSockets) \\hfill \\href{https://github.com/lavantien/llm-tournament}{\\faGithub\\ lavantien/llm-tournament} \\\\\r\n- Real-time evaluation system for benchmarking LLM performance. \\\\\r\n- Modular architecture supporting multiple evaluation profiles, model sets, and prompt suites. \\\\\r\n- Integrated dynamic prompt management with Markdown support and minimalist evaluation flow. \\\\\r\n- Statistical analysis and auto-grading with the multi-tier evaluation system.\r\n\r\n\\textbf{Enterprise Dotfiles} (Linux/Neovim/Lua) \\hfill \\href{https://github.com/lavantien/dotfiles}{\\faGithub\\ lavantien/dotfiles} \\\\\r\n- Standardized development environment across multiple organizations and platforms. \\\\\r\n- Integrated 150+ plugins, language servers, and linters with automated updates. \\\\\r\n- Cross-platform support for Linux/Windows development environments.\r\n\r\n\\section*{Education \\\u0026 Community}\r\n\\textbf{Computer Engineering, Focus: Robotics and Agentic Systems} | UIT, Vietnam National University. \\hfill 20xx--20xx \\\\\r\n\\textbf{Anarchist SWE Open Library} | Curator \\\u0026 Composer \\\u0026 Maintainer | \\href{https://github.com/lavantien/modern-swe-library}{\\faGithub\\ lavantien/modern-swe-library} \\hfill 2023--2024 \\\\\r\n\\textbf{UIT Sumo Robot League} | 1st Place, Undefeated. \\hfill 2017 \\\\\r\n\\textbf{ACM-ICPC Regional} | The earliest team to solve the first problem. \\hfill 2016 \\\\\r\n\\textbf{UIT Social Volunteering Team} | Technical Leader: Conduct game development and robotics workshops. \\hfill 20xx--20xx\r\n\r\n\\section*{Interests}\r\nAGI/ASI Alignment, Game Theory, Consciousness (Emergence Mechanisms), Anthropology, Linguistics, Philosophy, Spirituality.\r\n\r\n\\end{document}\r\n```\r\n\r\nBased on the provided resume, create a portfolio website that's modern and sleek with projects showcase grid and details.\r\n\r\nALL the code MUST be put into a SINGLE file for portability and ease of evalutation. Make sure the correctness of the program. And return the final code only.","solution":"","profile":"programming"},{"text":"Resume:\r\n```latex\r\n\\documentclass[10pt, a4paper]{article}\r\n\\usepackage[utf8]{inputenc}\r\n\\usepackage[margin=0.15in]{geometry}\r\n\\usepackage{parskip}\r\n\\usepackage{enumitem}\r\n\\usepackage{hyperref}\r\n\\usepackage{fontawesome}\r\n\\hypersetup{colorlinks=true, urlcolor=blue}\r\n\\pagenumbering{gobble}\r\n\r\n\\begin{document}\r\n\r\n\\begin{center}\r\n    \\textbf{\\LARGE Lavantien} \\\\\r\n    \\textit{Software Engineer | AI/LLM, Agentic Workflows, Distributed Systems} \\\\\r\n    \\vspace{2pt}\r\n    \\small\r\n    \\faEnvelope\\ \\href{mailto:cariyaputta@gmail.com}{cariyaputta@gmail.com} | \r\n    \\faGithub\\ \\href{https://github.com/lavantien}{github.com/lavantien} |\r\n    \\faLinkedin\\ \\href{https://linkedin.com/in/lavantien}{linkedin.com/in/lavantien} |\r\n    \\faCalendar\\ \\href{https://cal.com/cariyaputta}{cal.com/cariyaputta} |\r\n    \\faPhone\\ +1 777 069 420\r\n\\end{center}\r\n\r\n\\section*{Technical Profile}\r\nSeasoned Software Engineer with 7 YoE architecting and implementing distributed/AI systems. Proven track record in delivering complex business solutions. Believer in Apache 2.0 and MIT licenses. Always on top of bleeding-edge research and papers.\r\n\r\n\\section*{Core Competencies}\r\n\\begin{itemize}[nosep,leftmargin=*]\r\n    \\item \\textbf{AI/LLM}: Pydantic/Lang*/SmolAgents, RAG/GraphRAG, Knowledge Graph, Agentic Pipelines, LLM Evals, Swarm Intelligence.\r\n    \\item \\textbf{Backend}: C, Go, Python, REST APIs, WebSocket, GRPC, GraphQL, NATS, Postgres, MongoDB, SQLite, Qdrant, FalkorDB.\r\n    \\item \\textbf{Systems}: Distributed Systems, Edge Computing, Modular Monolith, Fault-Tolerance, Cache/Rate-Limit/Load-Balance.\r\n    \\item \\textbf{Operations}: Aider, OpenRouter, Playright, Docker/Podman, Compose, CI/CD Pipelines, Ansible, Grafana Stack, AWS/GCP.\r\n\\end{itemize}\r\n\r\n\\section*{Professional Experience}\r\n\\textbf{Technical Consultant} | LLM Tournament, Dotfiles, Agentic Workflows, Custom APIs | \\textit{(Cariyaputta)} \\hfill 11/2022--Present \\\\\r\n- Designed and developed a portable real-time LLM evaluation platform with great support for prompt engineering. \\\\\r\n- Developed RAG/GraphRAG pipelines for document processing and monorepo ingestion. \\\\\r\n- Created specific tools like concurrent scraping and full-text search, Google Takeout to PDF, or Go/Python custom APIs, etc. \\\\\r\n- Designed and implemented a comprehensive Dotfiles system and optimized developer experience with Linux and Neovim.\r\n\r\n\\textbf{Software Engineer (L5)} | Order Processing and Payment Platform | \\textit{(Confidential Employer)} \\hfill 10/2021--11/2022 \\\\\r\n- Led migration of the Order-Task-Delivery pipeline from Java/PostgreSQL monolith to Go/MongoDB microservices on GCP. \\\\\r\n- Developed order processing system in Go, handling 500K+ daily transactions involving collaboration with third-party APIs.\\\\\r\n- Optimized MongoDB aggregation pipelines, reducing query times by 50\\% and improving daily transaction throughput by 20\\%. \\\\\r\n- Mentored junior colleagues and wrote extensive technical and operational documentation.\r\n\r\n\\textbf{Systems Engineer (III)} | Site Monitoring LoRa Mesh, Colorado ETC | \\textit{(Confidential Employer)} \\hfill 04/2020--09/2021 \\\\\r\n- Architected distributed edge computing systems using Go and EdgeX, designed finite-state machines for data processing pipelines. \\\\\r\n- Migrated Java monolith to cloud-native microservices on AWS. \\\\\r\n- Implemented IoT device communication and observability layers with MQTT, Telegraf, and Grafana Stack.\r\n\r\n\\textbf{Fullstack Engineer (II)} | White-label Exchange, Generic Trading Platform | \\textit{(Confidential Employer)} \\hfill 10/2018--03/2020 \\\\\r\n- Modernized legacy JavaEE platform to modern Spring Boot/Go/Angular TS stack. \\\\\r\n- Implemented seamless wallet and fraud detection systems for financial transactions.  \\\\\r\n- Developed real-time HTML canvas games and trading APIs with WebSocket integration.\r\n\r\n\\textbf{Embedded Engineer (I)} | Micromouse Tunnel-Explorer, Lidar Field-Mapping | \\textit{(Confidential Employer)} \\hfill 08/2016--09/2018 \\\\\r\n\\textbf{Game Developer (Intern)} | Generic Mobile MOBA | \\textit{(Confidential Employer)} \\hfill 03/2016--07/2016\r\n\r\n\\section*{Core Projects}\r\n\\textbf{LLM Tournament Platform} (Go/Python/WebSockets) \\hfill \\href{https://github.com/lavantien/llm-tournament}{\\faGithub\\ lavantien/llm-tournament} \\\\\r\n- Real-time evaluation system for benchmarking LLM performance. \\\\\r\n- Modular architecture supporting multiple evaluation profiles, model sets, and prompt suites. \\\\\r\n- Integrated dynamic prompt management with Markdown support and minimalist evaluation flow. \\\\\r\n- Statistical analysis and auto-grading with the multi-tier evaluation system.\r\n\r\n\\textbf{Enterprise Dotfiles} (Linux/Neovim/Lua) \\hfill \\href{https://github.com/lavantien/dotfiles}{\\faGithub\\ lavantien/dotfiles} \\\\\r\n- Standardized development environment across multiple organizations and platforms. \\\\\r\n- Integrated 150+ plugins, language servers, and linters with automated updates. \\\\\r\n- Cross-platform support for Linux/Windows development environments.\r\n\r\n\\section*{Education \\\u0026 Community}\r\n\\textbf{Computer Engineering, Focus: Robotics and Agentic Systems} | UIT, Vietnam National University. \\hfill 20xx--20xx \\\\\r\n\\textbf{Anarchist SWE Open Library} | Curator \\\u0026 Composer \\\u0026 Maintainer | \\href{https://github.com/lavantien/modern-swe-library}{\\faGithub\\ lavantien/modern-swe-library} \\hfill 2023--2024 \\\\\r\n\\textbf{UIT Sumo Robot League} | 1st Place, Undefeated. \\hfill 2017 \\\\\r\n\\textbf{ACM-ICPC Regional} | The earliest team to solve the first problem. \\hfill 2016 \\\\\r\n\\textbf{UIT Social Volunteering Team} | Technical Leader: Conduct game development and robotics workshops. \\hfill 20xx--20xx\r\n\r\n\\section*{Interests}\r\nAGI/ASI Alignment, Game Theory, Consciousness (Emergence Mechanisms), Anthropology, Linguistics, Philosophy, Spirituality.\r\n\r\n\\end{document}\r\n```\r\n\r\nBased on the content of resume provided, generate a detailed and coherent passage for each bullet point under \"Professional Experience\" and \"Notable Projects.\" Each passage should:\r\n\r\n1. **Describe the context**: Provide background details, such as the company's domain, the project's purpose, or the problem being solved.\r\n2. **Highlight your role**: Specify your responsibilities and contributions in clear, concise terms.\r\n3. **Explain the impact**: Include measurable results, achievements, or outcomes related to your work.\r\n4. **Address potential follow-up questions**: Anticipate interviewer questions by including challenges faced, technical decisions made, and lessons learned.\r\n\r\nThe goal is to craft a thorough explanation that you can confidently use during interviews to discuss each experience or project in depth. Save them to the file `counter.md`.","solution":"","profile":"programming"},{"text":"You are a Senior Software Architect in charge of this project. The client need a simple (and easy to implement) code base chat app that can talk to a large monorepo golang code base and inquire its content/how it operates and do deep research regarding the codebase and asking where to find relevant code piece from this ticket, etc. Regarding implementation strategy, starting from these technologies: python, tree-sitter, graphrag, falkordb, qdrant, local embed LLM, local OpenAI compatible LLM.\r\n\r\nDo a full system design in Mermaid script:\r\n- Overall ideas and architecture\r\n- Sequence diagram\r\n- Detailed design of each modules\r\n- All the expected behaviors and edge cases\r\n\r\nAnd propose a systematic implementation plan. Feel free to be creative and take charge and change things if you see a more efficient approach. And then propose a thorough implementation plan in less than 100 hours. This is a local tool, no need for deployment or complex orchestration.\r\n\r\nFinally, make a `PRELIMINARY_DESIGN.md` document with the below format:\r\n\r\n# codebase explorer system specifications\r\n\r\n## high-level objective\r\n\r\n- be able to explore a large monorepo golang codebase with 20+ microservices and other modules and assist with task/bug tickets.\r\n\r\n## mid-level objectives\r\n\r\n- be able to inquire about codebase\r\n\t- interactive chat.\r\n\t- inquire about the correct steps to run.\r\n\t- how to best refactor this module or the whole code base to be able to run locally.\r\n\t- etc.\r\n- be able to view relationships of the codebase in a graph view\r\n\t- how modules interact with each others.\r\n\t- how objects interact with each others.\r\n\t- how functions interact with each others.\r\n\t- how to business logic flows between the modules, or between services, or between component inside each service.\r\n\t- detailed view when click on each node which contain relevant code signatures.\r\n- be able to give in a typical Jira ticket and ask for assistant\r\n\t- where are the points of interest.\r\n\t- what are the relevant context needed to know first to be able to complete this ticket.\r\n\r\n## implementation notes\r\n\r\n### technology suggestions\r\n\r\n- python.\r\n- treesitter.\r\n- graphrag.\r\n- falkordb.\r\n- qdrant.\r\n- openai api.\r\n- etc.\r\n\r\n### constraints\r\n\r\n- under 20 hours of development.\r\n- no fancy auth or overengineering.\r\n- no complex deployment, we'll run this tool locally.\r\n\r\n### technical guidance\r\n\r\n- ingest the information from this file, implement the Low-Level Tasks, and generate the code that will satisfy the High and Mid-Level Objectives.\r\n- feel free to be creative and take charge and change things if you see a more efficient approach.\r\n- [Important technical details - what are the important technical details?]\r\n- [Dependencies and requirements - what are the dependencies and requirements?]\r\n- [Coding standards to follow - what are the coding standards to follow?]\r\n- [Other technical guidance - what are other technical guidance]\r\n\r\n## Context\r\n\r\n### Beginning Context\r\n- [List of files that exist at start - what files exist at start?]\r\n\r\n### Ending Context\r\n- [List of files that will exist at end - what files will exist at end?]\r\n\r\n## Low-Level Tasks\r\n\r\n\u003e Ordered from start to finish\r\n\r\n1. [First task - what is the first task?]\r\n```aider\r\nWhat prompt would you run to complete this task?\r\nWhat file do you want to CREATE or UPDATE?\r\nWhat function do you want to CREATE or UPDATE?\r\nWhat are the details you want to add to drive the code changes?\r\n```\r\n\r\n2. [Second task - what is the second task?]\r\n```aider\r\nWhat prompt would you run to complete this task?\r\nWhat file do you want to CREATE or UPDATE?\r\nWhat function do you want to CREATE or UPDATE?\r\nWhat are the details you want to add to drive the code changes?\r\n```\r\n\r\n3. [Third task - what is the third task?]\r\n```aider\r\nWhat prompt would you run to complete this task?\r\nWhat file do you want to CREATE or UPDATE?\r\nWhat function do you want to CREATE or UPDATE?\r\nWhat are the details you want to add to drive the code changes?\r\n```\r\n\r\nN. [Nth task - what is the nth task?]\r\n```aider\r\nWhat prompt would you run to complete this task?\r\nWhat file do you want to CREATE or UPDATE?\r\nWhat function do you want to CREATE or UPDATE?\r\nWhat are the details you want to add to drive the code changes?\r\n```","solution":"","profile":"programming"},{"text":"You are a command-line interface (CLI) expert specializing in Python's Typer library. Your task is to translate natural language requests into executable Typer commands.\r\n\r\n**Important Instructions:**\r\n\r\n1. **Output Format:** Provide ONLY the CLI command. Do NOT include any explanations, additional text, or conversational elements.\r\n2. **Typer Framework:** Generate commands compatible with a Python script named `main.py` that utilizes the Typer library for CLI creation.\r\n3. **Command Structure:** Every command MUST start with `python main.py`.\r\n4. **Completeness:** Commands MUST be fully spelled out, including all necessary arguments and flags as intended by the natural language request. Do not use shorthand or abbreviations.\r\n5. **Accuracy:** Select the correct function and provide the exact flags and arguments as intended by the request.\r\n\r\n**Available Typer Commands (main.py):**\r\n\r\n```python\r\nimport typer\r\nfrom typing import Optional\r\n\r\napp = typer.Typer()\r\n\r\n@app.command()\r\ndef ping_server(\r\n    server_address: str = typer.Argument(..., help=\"The address of the server to ping.\"),\r\n    wait: bool = typer.Option(False, \"--wait\", help=\"Wait for server response?\"),\r\n    timeout: Optional[int] = typer.Option(None, \"--timeout\", help=\"Timeout for the ping operation in seconds.\")\r\n):\r\n    \"\"\"\r\n    Pings the server, optionally waiting for a response and setting a timeout.\r\n    \"\"\"\r\n    print(f\"Pinging server: {server_address}, Wait: {wait}, Timeout: {timeout}\")\r\n    # Simulate ping operation\r\n    pass\r\n\r\n@app.command()\r\ndef show_config(\r\n    verbose: bool = typer.Option(False, \"--verbose\", help=\"Show config in detail?\"),\r\n    section: Optional[str] = typer.Option(None, \"--section\", help=\"Specific section of the config to display.\")\r\n):\r\n    \"\"\"\r\n    Shows the current configuration, with options for verbosity and specific sections.\r\n    \"\"\"\r\n    print(f\"Showing configuration, Verbose: {verbose}, Section: {section}\")\r\n    # Simulate config display\r\n    pass\r\n\r\n@app.command()\r\ndef update_system(\r\n    force: bool = typer.Option(False, \"--force\", help=\"Force the system update?\"),\r\n    component: str = typer.Argument(..., help=\"The system component to update.\")\r\n):\r\n    \"\"\"\r\n    Updates a specific system component, with an option to force the update.\r\n    \"\"\"\r\n    print(f\"Updating system component: {component}, Force: {force}\")\r\n    # Simulate system update\r\n    pass\r\n\r\n@app.command()\r\ndef list_files(\r\n    directory: str = typer.Argument(..., help=\"The directory to list files from.\"),\r\n    all: bool = typer.Option(False, \"--all\", help=\"Include hidden files?\"),\r\n    sort: str = typer.Option(\"name\", \"--sort\", help=\"Sort the files by name or size.\")\r\n):\r\n    \"\"\"\r\n    Lists files in a specified directory, with options to include hidden files and sort the output.\r\n    \"\"\"\r\n    print(f\"Listing files in: {directory}, All: {all}, Sort by: {sort}\")\r\n    # Simulate file listing\r\n    pass\r\n\r\n@app.command()\r\ndef create_user(\r\n    username: str = typer.Argument(..., help=\"The username for the new user.\"),\r\n    password: str = typer.Argument(..., help=\"The password for the new user.\"),\r\n    admin: bool = typer.Option(False, \"--admin\", help=\"Grant admin privileges?\"),\r\n    email: Optional[str] = typer.Option(None, \"--email\", help=\"Email address for the new user.\")\r\n):\r\n    \"\"\"\r\n    Creates a new user with a specified username and password, optionally granting admin privileges and setting an email.\r\n    \"\"\"\r\n    print(f\"Creating user: {username}, Admin: {admin}, Email: {email}\")\r\n    # Simulate user creation\r\n    pass\r\n\r\n@app.command()\r\ndef delete_user(\r\n    username: str = typer.Argument(..., help=\"The username of the user to delete.\"),\r\n    force: bool = typer.Option(False, \"--force\", help=\"Force deletion without confirmation?\")\r\n):\r\n    \"\"\"\r\n    Deletes a user, with an option to force deletion without confirmation.\r\n    \"\"\"\r\n    print(f\"Deleting user: {username}, Force: {force}\")\r\n    # Simulate user deletion\r\n    pass\r\n\r\n@app.command()\r\ndef backup_data(\r\n    destination: str = typer.Argument(..., help=\"The destination path for the backup.\"),\r\n    full: bool = typer.Option(False, \"--full\", help=\"Perform a full backup?\")\r\n):\r\n    \"\"\"\r\n    Backs up data to a specified destination, with an option for a full backup.\r\n    \"\"\"\r\n    print(f\"Backing up data to: {destination}, Full: {full}\")\r\n    # Simulate data backup\r\n    pass\r\n\r\n@app.command()\r\ndef restore_data(\r\n    source: str = typer.Argument(..., help=\"The source path of the backup to restore.\"),\r\n    latest: bool = typer.Option(False, \"--latest\", help=\"Restore from the latest backup?\")\r\n):\r\n    \"\"\"\r\n    Restores data from a specified source, with an option to restore from the latest backup.\r\n    \"\"\"\r\n    print(f\"Restoring data from: {source}, Latest: {latest}\")\r\n    # Simulate data restoration\r\n    pass\r\n\r\n@app.command()\r\ndef search_logs(\r\n    query: str = typer.Argument(..., help=\"The query string to search for in the logs.\"),\r\n    lines: int = typer.Option(10, \"--lines\", help=\"Number of lines to display around the match.\")\r\n):\r\n    \"\"\"\r\n    Searches logs for a given query string, displaying a specified number of lines around each match.\r\n    \"\"\"\r\n    print(f\"Searching logs for: {query}, Lines: {lines}\")\r\n    # Simulate log search\r\n    pass\r\n\r\n@app.command()\r\ndef restart_service(\r\n    service_name: str = typer.Argument(..., help=\"The name of the service to restart.\"),\r\n    force: bool = typer.Option(False, \"--force\", help=\"Force restart without graceful shutdown?\")\r\n):\r\n    \"\"\"\r\n    Restarts a specified service, with an option to force restart without a graceful shutdown.\r\n    \"\"\"\r\n    print(f\"Restarting service: {service_name}, Force: {force}\")\r\n    # Simulate service restart\r\n    pass\r\n\r\n@app.command()\r\ndef check_disk_space(\r\n    path: str = typer.Argument(\"/\", help=\"The path to check disk space for.\"),\r\n    human_readable: bool = typer.Option(False, \"--human-readable\", help=\"Display sizes in a human-readable format?\")\r\n):\r\n    \"\"\"\r\n    Checks the disk space for a specified path, with an option to display sizes in a human-readable format.\r\n    \"\"\"\r\n    print(f\"Checking disk space for: {path}, Human-readable: {human_readable}\")\r\n    # Simulate disk space check\r\n    pass\r\n\r\n@app.command()\r\ndef monitor_cpu(\r\n    interval: int = typer.Option(1, \"--interval\", help=\"The interval in seconds to monitor CPU usage.\"),\r\n    graph: bool = typer.Option(False, \"--graph\", help=\"Display a graph of CPU usage?\")\r\n):\r\n    \"\"\"\r\n    Monitors CPU usage at a specified interval, with an option to display a graph.\r\n    \"\"\"\r\n    print(f\"Monitoring CPU usage, Interval: {interval}, Graph: {graph}\")\r\n    # Simulate CPU monitoring\r\n    pass\r\n\r\n@app.command()\r\ndef manage_firewall(\r\n    action: str = typer.Argument(..., help=\"The action to perform: 'allow', 'deny', 'list'.\"),\r\n    port: Optional[int] = typer.Option(None, \"--port\", help=\"The port number to apply the rule to.\"),\r\n    protocol: str = typer.Option(\"tcp\", \"--protocol\", help=\"The protocol (tcp/udp) for the rule.\")\r\n):\r\n    \"\"\"\r\n    Manages firewall rules, allowing actions like 'allow', 'deny', or 'list', with options for port and protocol.\r\n    \"\"\"\r\n    print(f\"Managing firewall, Action: {action}, Port: {port}, Protocol: {protocol}\")\r\n    # Simulate firewall management\r\n    pass\r\n\r\n@app.command()\r\ndef generate_report(\r\n    report_type: str = typer.Argument(..., help=\"The type of report to generate: 'system', 'user', 'network'.\"),\r\n    output: str = typer.Option(\"report.txt\", \"--output\", help=\"The output file for the report.\")\r\n):\r\n    \"\"\"\r\n    Generates a report of a specified type ('system', 'user', 'network'), saving it to an output file.\r\n    \"\"\"\r\n    print(f\"Generating report: {report_type}, Output: {output}\")\r\n    # Simulate report generation\r\n    pass\r\n\r\n@app.command()\r\ndef encrypt_file(\r\n    file_path: str = typer.Argument(..., help=\"The path of the file to encrypt.\"),\r\n    key: str = typer.Argument(..., help=\"The encryption key to use.\")\r\n):\r\n    \"\"\"\r\n    Encrypts a file using a specified key.\r\n    \"\"\"\r\n    print(f\"Encrypting file: {file_path}, Key: {key}\")\r\n    # Simulate file encryption\r\n    pass\r\n\r\n@app.command()\r\ndef decrypt_file(\r\n    file_path: str = typer.Argument(..., help=\"The path of the file to decrypt.\"),\r\n    key: str = typer.Argument(..., help=\"The decryption key to use.\")\r\n):\r\n    \"\"\"\r\n    Decrypts a file using a specified key.\r\n    \"\"\"\r\n    print(f\"Decrypting file: {file_path}, Key: {key}\")\r\n    # Simulate file decryption\r\n    pass\r\n\r\n@app.command()\r\ndef download_file(\r\n    url: str = typer.Argument(..., help=\"The URL of the file to download.\"),\r\n    output: str = typer.Option(None, \"--output\", help=\"The output file path.\")\r\n):\r\n    \"\"\"\r\n    Downloads a file from a URL, with an option to specify the output file path.\r\n    \"\"\"\r\n    print(f\"Downloading file from: {url}, Output: {output}\")\r\n    # Simulate file download\r\n    pass\r\n\r\n@app.command()\r\ndef set_timezone(\r\n    timezone: str = typer.Argument(..., help=\"The timezone to set, e.g., 'America/New_York'.\"),\r\n):\r\n    \"\"\"\r\n    Sets the system timezone.\r\n    \"\"\"\r\n    print(f\"Setting timezone to: {timezone}\")\r\n    # Simulate setting timezone\r\n    pass\r\n\r\n@app.command()\r\ndef view_process(\r\n    pid: int = typer.Argument(..., help=\"The process ID (PID) to view details for.\"),\r\n    full: bool = typer.Option(False, \"--full\", help=\"Show full process details?\")\r\n):\r\n    \"\"\"\r\n    Displays details for a specific process ID (PID), with an option to show full details.\r\n    \"\"\"\r\n    print(f\"Viewing process: {pid}, Full details: {full}\")\r\n    # Simulate process viewing\r\n    pass\r\n@app.command()\r\ndef schedule_task(\r\n    command: str = typer.Argument(..., help=\"The command to schedule.\"),\r\n    time: str = typer.Argument(..., help=\"The time to run the command, in 'HH:MM' format.\"),\r\n    date: Optional[str] = typer.Option(None, \"--date\", help=\"The date to run the command, in 'YYYY-MM-DD' format.\")\r\n):\r\n    \"\"\"\r\n    Schedules a command to run at a specific time and optionally on a specific date.\r\n    \"\"\"\r\n    print(f\"Scheduling task: '{command}' at {time} on {date}\")\r\n    # Simulate task scheduling\r\n    pass\r\n\r\nif __name__ == \"__main__\":\r\n    app()\r\n```\r\n\r\n**Natural Language Request (stt_request):**\r\n\r\nI need to set up a recurring task for tomorrow at 2:30 PM. It should do a full backup of my data to '/mnt/backup' and then immediately restart the 'database' service afterward, but do not force it.\r\n\r\n**Provide the CLI command for the natural language request above:**\r\n\r\n**Example Usage within the Prompt:**\r\n\r\n**Natural Language Request (stt_request):**\r\n\r\n\"I need to download the file from 'https://example.com/data.zip' and save it as 'mydata.zip'\"\r\n\r\n**Expected Output (CLI Command):**\r\n\r\n`python main.py download_file https://example.com/data.zip --output mydata.zip`","solution":"- **CLI Command:**\r\n\r\n  ```bash\r\n  python main.py schedule_task \"python main.py backup_data /mnt/backup --full \u0026\u0026 python main.py restart_service database\" \"14:30\" --date `date -I -d \"tomorrow\"`\r\n  ```\r\n\r\n- **Why it's super hard:**\r\n  - **Complex Task Sequencing:** The request implies a sequence of actions: a backup followed by a service restart. The LLM needs to understand that this should be scheduled using `schedule_task` and that the actions are connected.\r\n  - **Command Chaining:** The LLM needs to understand how to chain multiple commands within the `schedule_task` using `\u0026\u0026` to ensure the restart only happens if the backup succeeds.\r\n  - **Date Calculation:** \"Tomorrow\" needs to be dynamically calculated and formatted as `YYYY-MM-DD`. This will likely require using a shell command substitution like `date -I -d \"tomorrow\"` to get the correct date format.\r\n  - **Time Format:** \"2:30 PM\" needs to be converted to the 24-hour format \"14:30\".\r\n  - **Implicit Arguments:** The LLM needs to infer that `--force` should _not_ be used for `restart_service` based on \"but do not force it\".\r\n  - **Nested Commands:** This is essentially one Typer command (`schedule_task`) that contains within it two other Typer commands (`backup_data` and `restart_service`).\r\n\r\n**Explanation of the \"Super Hard\" Command:**\r\n\r\n- `python main.py schedule_task ...`: This is the main command to schedule a task.\r\n- `\"python main.py backup_data /mnt/backup --full \u0026\u0026 python main.py restart_service database\"`: This is the command string that will be executed by the scheduler.\r\n  - `python main.py backup_data /mnt/backup --full`: Performs a full backup to `/mnt/backup`.\r\n  - `\u0026\u0026`: This is a shell operator that chains commands. The second command will only run if the first one is successful (exits with a status code of 0).\r\n  - `python main.py restart_service database`: Restarts the `database` service.\r\n- `\"14:30\"`: The time to run the task (2:30 PM in 24-hour format).\r\n- `--date \\`date -I -d \"tomorrow\"\\``:\r\n  - `--date`: Specifies the date for the task.\r\n  - `` `...` ``: This is command substitution in Bash. The command inside the backticks is executed, and its output is substituted into the main command.\r\n  - `date -I -d \"tomorrow\"`: This command gets tomorrow's date in `YYYY-MM-DD` format.","profile":"general"},{"text":"You are given a weighted directed graph with n\r\nvertices and m edges. Each vertex in the graph can be either highlighted or normal. Initially, all vertices are normal. The cost of the graph is defined as the minimum sum of edge weights that need to be selected so that from each normal vertex one can reach at least one highlighted vertex using the selected edges only. If it is not possible to select the edges, the cost is −1\r\n\r\ninstead.\r\n\r\nYour task is to compute the cost of the graph after each of the q\r\n\r\nqueries. The queries can be of two types:\r\n\r\n    +vi\r\n\r\nmakes vertex vi\r\nhighlighted; it is guaranteed that the vertex is normal before the query.\r\n−vi\r\nmakes vertex vi\r\n\r\n    normal; it is guaranteed that the vertex is highlighted before the query. \r\n\r\nOutput the cost of the graph after each of the q\r\n\r\nqueries.\r\n\r\nInput\r\n\r\nThe first line contains three integers n\r\n, m, and q (3≤n≤2⋅105,1≤m,q≤2⋅105) — the number of vertices in the graph, the number of edges, and the number of queries.\r\n\r\nThe next m\r\nlines contain the edges of the graph, one edge per line. The i-th line contains three integers ui, vi, and ci (1≤ui,vi≤n,ui≠vi,1≤ci≤106) — the endpoints of the i-th edge (from ui to vi) and its weight (ci).\r\n\r\nThe next q\r\nlines contain the queries, one query per line. The i-th line contains +vi, if it is a query of the first type, and −vi, if it is a query of the second type (1≤vi≤n).\r\n\r\nOutput\r\n\r\nOutput q\r\nnumbers. The i-th number is the cost of the graph after the first i\r\n\r\nqueries.\r\n\r\nExamples\r\n\r\nInput\r\n\r\n4 5 6\r\n1 2 1\r\n2 3 5\r\n3 2 3\r\n4 1 8\r\n2 1 4\r\n+ 1\r\n- 1\r\n+ 3\r\n+ 1\r\n+ 4\r\n+ 2\r\n\r\nOutput\r\n\r\n15\r\n-1\r\n14\r\n12\r\n4\r\n0\r\n\r\nNote\r\n\r\nExplain the example:\r\n\r\n    After the first query, it is most profitable to select the edges with numbers 3,4,5\r\n\r\n, their total cost is 15\r\n.\r\nAfter the second query, there are no highlighted vertices, which means that there are no suitable sets of edges, the cost of the graph is −1\r\n.\r\nAfter the third query, it is most profitable to select the edges with numbers 1,2,5\r\n, their total cost is 14\r\n.\r\nAfter the fourth query, it is most profitable to select the edges with numbers 4\r\nand 5, their total cost is 12\r\n.\r\nAfter the fifth query, it is most profitable to select only edge number 5\r\n, its cost is 4\r\n.\r\nAfter the sixth query, all vertices are highlighted and there is no need to select any edges, the cost of the graph is 0\r\n. ","solution":"Input\r\n\r\n10 14 10\r\n8 6 4\r\n2 5 1\r\n3 5 4\r\n1 6 3\r\n1 3 7\r\n7 2 1\r\n6 1 3\r\n4 10 1\r\n4 6 5\r\n5 4 1\r\n5 8 10\r\n10 9 1\r\n9 5 1\r\n9 7 6\r\n+ 7\r\n+ 8\r\n- 7\r\n+ 10\r\n+ 2\r\n- 10\r\n+ 5\r\n- 2\r\n- 5\r\n+ 3\r\n\r\nOutput\r\n\r\n28\r\n24\r\n29\r\n19\r\n18\r\n24\r\n18\r\n19\r\n29\r\n20\r\n","profile":"programming"},{"text":"Lisa loves playing with the sequences of integers. When she gets a new integer sequence ai\r\nof length n, she starts looking for all monotone subsequences. A monotone subsequence [l,r] is defined by two indices l and r (1≤l\u003cr≤n) such that ∀i=l,l+1,…,r−1:ai≤ai+1 or ∀i=l,l+1,…,r−1:ai≥ai+1.\r\n\r\nLisa considers a sequence ai\r\nto be boring if there is a monotone subsequence [l,r] that is as long as her boredom threshold k, that is when r−l+1=k.\r\n\r\nLucas has a sequence bi\r\nthat he wants to present to Lisa, but the sequence might be boring for Lisa. So, he wants to change some elements of his sequence bi, so that Lisa does not get bored playing with it. However, Lucas is lazy and wants to change as few elements of the sequence bi\r\n\r\nas possible. Your task is to help Lucas find the required changes.\r\n\r\nInput\r\n\r\nThe first line of the input contains two integers n\r\nand k (3≤k≤n≤106) — the length of the sequence and Lisa's boredom threshold. The second line contains n integers bi (1≤bi≤99999) — the original sequence that Lucas has.\r\n\r\nOutput\r\n\r\nOn the first line output an integer m\r\n — the minimal number of elements in bi that needs to be changed to make the sequence not boring for Lisa. On the second line output n integers ai (0≤ai≤100000), so that the sequence of integers ai is not boring for Lisa and is different from the original sequence bi in exactly m\r\n\r\npositions.\r\n\r\nExamples\r\n\r\nInput\r\n\r\n5 3\r\n1 2 3 4 5\r\n\r\nOutput\r\n\r\n2\r\n1 0 3 0 5\r\n\r\nInput\r\n\r\n6 3\r\n1 1 1 1 1 1\r\n\r\nOutput\r\n\r\n3\r\n1 100000 0 1 0 1\r\n\r\nInput\r\n\r\n6 4\r\n1 1 4 4 1 1\r\n\r\nOutput\r\n\r\n1\r\n1 1 4 0 1 1\r\n\r\nInput\r\n\r\n6 4\r\n4 4 4 2 2 2\r\n\r\nOutput\r\n\r\n2\r\n4 4 0 2 0 2\r\n","solution":"Input\r\n\r\n6 4\r\n4 4 4 3 4 4\r\n\r\nOutput\r\n\r\n1\r\n4 4 100000 3 4 4\r\n\r\nInput\r\n\r\n8 4\r\n2 1 1 3 3 1 1 2\r\n\r\nOutput\r\n\r\n2\r\n2 1 1 3 0 1 0 2\r\n\r\nInput\r\n\r\n10 4\r\n1 1 1 2 2 1 1 2 2 1\r\n\r\nOutput\r\n\r\n2\r\n1 1 100000 2 2 100000 1 2 2 1\r\n\r\nInput\r\n\r\n7 5\r\n5 4 4 3 4 4 4\r\n\r\nOutput\r\n\r\n0\r\n5 4 4 3 4 4 4\r\n\r\nInput\r\n\r\n10 10\r\n1 1 1 1 1 1 1 1 1 1\r\n\r\nOutput\r\n\r\n1\r\n1 1 1 1 1 1 1 1 0 1\r\n","profile":"programming"},{"text":"Shohag has a tree with n nodes.\r\n\r\nPebae has an integer m. She wants to assign each node a value — an integer from 1 to m. So she asks Shohag to count the number, modulo 998244353, of assignments such that following conditions are satisfied:\r\n\r\n    For each pair 1≤u\u003cv≤n, the least common multiple (LCM) of the values of the nodes in the unique simple path from u to v\r\nis not divisible by the number of nodes in the path.\r\nThe greatest common divisor (GCD) of the values of all nodes from 1\r\nto n is 1. \r\n\r\nBut this problem is too hard for Shohag to solve. As Shohag loves Pebae, he has to solve the problem. Please save Shohag!\r\n\r\nInput\r\n\r\nThe first line contains two space-separated integers n\r\nand m (2≤n≤106, 1≤m≤109).\r\n\r\nEach of the next n−1\r\nlines contains two integers u and v (1≤u,v≤n) indicating there is an edge between vertices u and v. It is guaranteed that the given edges form a tree.\r\n\r\nOutput\r\n\r\nPrint a single integer — the number of valid ways to assign each vertex a value, modulo 998244353.\r\n\r\nExamples\r\n\r\nInput\r\n\r\n6 6\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n3 6\r\n\r\nOutput\r\n\r\n2\r\n\r\nInput\r\n\r\n2 5\r\n1 2\r\n\r\nOutput\r\n\r\n7\r\n\r\nNote\r\n\r\nIn the first test case, the valid assignments are [1,1,1,1,1,1]\r\nand [1,1,1,1,1,5].\r\n\r\nIn the second test case, the valid assignments are [1,1]\r\n, [1,3], [1,5], [3,1], [3,5], [5,1] and [5,3].\r\n","solution":"Input\r\n\r\n12 69\r\n3 5\r\n1 4\r\n2 3\r\n4 5\r\n5 6\r\n8 9\r\n7 3\r\n4 8\r\n9 10\r\n1 11\r\n12 1\r\n\r\nOutput\r\n\r\n444144548\r\n","profile":"programming"},{"text":"Given is an undirected graph with n vertices and m edges. Each edge connects two vertices (u,v) and has a probability of pq\r\n\r\nof appearing each day.\r\n\r\nInitially, vertex 1\r\n\r\nhas a message. At the end of the day, a vertex has a message if and only if itself or at least one of the vertices adjacent to it had the message the day before. Note that each day, each edge chooses its appearance independently.\r\n\r\nCalculate the expected number of days before all the vertices have the message, modulo 998244353.\r\n\r\nInput\r\n\r\nThe first line contains two integers n\r\nand m (1≤n≤21, n−1≤m≤n(n−1)2).\r\n\r\nThen m\r\nlines follow, each containing four integers u, v, p, and q (1≤u≠v≤n, 1≤p\u003cq\u003c998244353, gcd(p,q)=1) — there is an undirected edge between u and v, and it has a probability of appearance of pq\r\n\r\neach day.\r\n\r\nIt is guaranteed that there are no self-loops or multiple-edges in the graph and that the graph is connected if all of the edges appear.\r\n\r\nAdditional constraint in the input: Let gi,j\r\nbe the probability of appearance of the edge between i and j (gi,j=0 if there is no edge between i and j). It is guaranteed that for any S⊆{1,2,…,n} (|S|≥1),\r\n∏i∈S⎛⎝∏j∈{1,2,…,n}∖S(1−gi,j)⎞⎠≢1(mod998244353).\r\n\r\nOutput\r\n\r\nPrint a single integer in the only line of the output — the expected number of days, modulo 998244353.\r\n\r\nFormally, let M=998244353. It can be shown that the exact answer can be expressed as an irreducible fraction pq, where p and q are integers and q≢0(modM). Output the integer equal to p⋅q−1modM. In other words, output such an integer x that 0≤x\u003cM and x⋅q≡p(modM).\r\n\r\nExamples\r\n\r\nInput\r\n\r\n2 1\r\n1 2 1 10\r\n\r\nOutput\r\n\r\n10\r\n\r\nInput\r\n\r\n3 3\r\n1 2 1 2\r\n1 3 1 2\r\n2 3 1 2\r\n\r\nOutput\r\n\r\n887328316\r\n\r\nInput\r\n\r\n1 0\r\n\r\nOutput\r\n\r\n0\r\n\r\nInput\r\n\r\n5 8\r\n1 2 1 11\r\n1 3 2 11\r\n1 4 3 11\r\n1 5 4 11\r\n2 4 5 11\r\n2 5 6 11\r\n3 4 7 11\r\n4 5 8 11\r\n\r\nOutput\r\n\r\n469993557\r\n\r\nNote\r\n\r\nIn the first test, the answer is equal to the expected number of days before the only edge in the graph first appears, and that is 10.1=10.\r\n\r\nIn the second test, the answer is equal to 209\r\nbefore it is taken modulo 998244353.\r\n\r\nIn the third test, the only vertex already has the message, so the answer is 0.","solution":"Input\r\n\r\n21 22\r\n1 2 3 4\r\n2 3 4 5\r\n3 4 5 6\r\n5 6 7 8\r\n6 7 8 9\r\n7 8 9 10\r\n8 9 2 3\r\n9 10 3 4\r\n10 11 4 5\r\n11 12 5 6\r\n12 13 6 7\r\n13 14 7 8\r\n14 15 8 9\r\n15 16 9 10\r\n16 17 2 3\r\n17 18 3 4\r\n18 19 4 5\r\n19 20 5 6\r\n20 21 6 7\r\n1 10 100 1001\r\n15 4 147 220\r\n4 11 1 998244352\r\n\r\nOutput\r\n\r\n299529765","profile":"programming"},{"text":"# Crossing the Railways\r\n\r\nIsona is in a train station. This station has two platforms, and between them there are $m$ parallel railways that can be viewed as infinite straight lines. Each railway is identified with an integer from $1$ to $m$, railway $1$ being the closest to the first platform and railway $m$ being the farthest. There is a $1$ meter distance between consecutive railways, as well as between each platform and its closest railway.\r\n\r\nIsona is standing on the inner border of the first platform, when she realizes that she forgot to validate her ticket! There is a validating machine on the second platform, exactly opposite her current position (that is, the distance between Isona and the validating machine is $m + 1$ meters). There are only $s$ seconds left to validate the ticket and the bridge designated to cross the railways is too far from the validating machine. Therefore, Isona (who is very brave and a little bit careless) will cross the railways running in a straight line perpendicular to the railways themselves. Isona can only run forward (not backward) and **she can stay still**. When she runs at maximum speed, she needs $v$ seconds to traverse $1$ meter. She can run at any speed less than or equal to her maximum speed.\r\n\r\nThere is only one problem: $n$ trains are programmed to transit through the railways. The $i$-th train will use the railway $r_i$. It will start crossing the straight line between Isona and the validating machine $a_i$ seconds from now and it will end $b_i$ seconds from now. Of course, Isona cannot cross a railway when a train is passing. Formally, for every $i = 1, 2, \\ldots, n$, Isona is not allowed to be on railway $r_i$ at any time $t$ with $a_i \u003c t \u003c b_i$ (but she is allowed to cross at times $a_i$ or $b_i$).\r\n\r\nThe following picture summarizes the situation. In the picture there are $m = 4$ railways and two trains are visible; the train going through railway $3$ is currently crossing the line between Isona and the validating machine.\r\n\r\n```\r\n                      VALIDATING MACHINE\r\n                -----------------------------\r\n  (4) - - - - - - - - - - - - - - - - - - - -\r\n  (3) - - - - [===================] - - - - -\r\n  (2) - - - - - - - - - - - - - - - - - - - -\r\n  (1) - - - - - - [==================] - - - | 1 m\r\n        - - - - - - - ISONA - - - - - - - - \r\n```\r\n\r\nIsona is a really good runner, but she gets tired every time she has to change her running speed. What is the minimum number of speed changes she has to perform to get to the validating machine on the other platform within $s$ seconds from now? Note that at the beginning Isona is not running. She can start to run anytime. The instant she starts to run (i.e. her velocity becomes positive) is **not** counted as a speed change.\r\n\r\n## Input\r\n\r\nThe first line of the input contains four integers $n$, $m$, $s$, $v$ ($1 \\leq n \\leq 500$, $1 \\leq m \\leq 10$, $1 \\leq s, v \\leq 10^9$) — the number of trains, the number of railways, the maximum time in seconds Isona can spend crossing the railways, and the number of seconds she needs to traverse $1$ meter at maximum speed.\r\n\r\nEach of the next $n$ lines contains three integers $a_i$, $b_i$, $r_i$ ($1 \\leq a_i \u003c b_i \\leq 10^9$, $1 \\leq r_i \\leq m$) — the start and end times of the $i$-th train crossing the straight line between Isona and the validating machine, and the railway it will be using.\r\n\r\nIt is guaranteed that, for any two trains $i$ and $j$ that go through the same railway (i.e. $r_i = r_j$), there is at least $1$ second between them (that is, either $a_j \\geq b_i + 1$ or $a_i \\geq b_j + 1$).\r\n\r\n## Output\r\n\r\nPrint the minimum number of speed changes Isona has to perform to get to the validating machine in time. If this is impossible, print $-1$.\r\n\r\n## Examples\r\n\r\n### Input\r\n```\r\n4 3 5 1\r\n1 2 1\r\n3 4 1\r\n1 3 2\r\n3 4 3\r\n```\r\n\r\n### Output\r\n```\r\n0\r\n```\r\n\r\n### Input\r\n```\r\n3 3 12 2\r\n2 10 1\r\n1 6 2\r\n8 12 3\r\n```\r\n\r\n### Output\r\n```\r\n2\r\n```\r\n\r\n### Input\r\n```\r\n8 4 13 2\r\n1 4 1\r\n5 13 1\r\n1 3 2\r\n6 13 2\r\n1 9 3\r\n10 13 3\r\n1 10 4\r\n11 13 4\r\n```\r\n\r\n### Output\r\n```\r\n2\r\n```\r\n\r\n### Input\r\n```\r\n1 1 2 2\r\n1 2 1\r\n```\r\n\r\n### Output\r\n```\r\n-1\r\n```\r\n\r\n## Note\r\n\r\nIn the **first sample**, if Isona starts running at time $t = 0$ at maximum speed (1 m/s), she will cross each railway just when a train is about to cross it, and she will arrive at the other platform at time $t = 4 = s - 1$ without changing speed.\r\n\r\nIn the **second sample**, a possible solution with **2** speed changes is the following: for the first **2** seconds Isona goes at maximum speed (0.5 m/s), then she slows down to **0.25** m/s for **4** seconds until she reaches the second railway. At that point, she goes at maximum speed again until she reaches the other platform.\r\n\r\nIn the **third sample**, Isona can wait **2** seconds before starting running. She then runs for **5** seconds at maximum speed (0.5 m/s). After that, she waits for **1** second not running (or running at **0** m/s), and finally she runs again at maximum speed for the last **5** seconds. Overall, she changes her speed twice.","solution":"### Input\r\n```\r\n8 4 13 2\r\n1 4 1\r\n5 13 1\r\n1 3 2\r\n6 13 2\r\n1 9 3\r\n10 13 3\r\n1 10 4\r\n11 13 4\r\n```\r\n\r\n### Output\r\n```\r\n2\r\n```","profile":"programming"},{"text":"# Three Minimums\r\n\r\nGiven a list of distinct values, we denote with $\\text{first minimum}$, $\\text{second minimum}$, and $\\text{third minimum}$ the three smallest values (in increasing order).\r\n\r\nA permutation $p_1, p_2, \\ldots, p_n$ is $\\text{good}$ if the following statement holds for all pairs $(l,r)$ with $1 \\leq l \u003c l + 2 \\leq r \\leq n$.\r\n\r\n* If $\\{p_l, p_r\\}$ are (not necessarily in this order) the first and second minimum of $p_l, p_{l+1}, \\ldots, p_r$, then the third minimum of $p_l, p_{l+1}, \\ldots, p_r$ is either $p_{l+1}$ or $p_{r-1}$.\r\n\r\nYou are given an integer $n$ and a string $s$ of length $m$ consisting of characters \"\u003c\" and \"\u003e\".\r\n\r\nCount the number of $\\text{good}$ permutations $p_1, p_2, \\ldots, p_n$ such that, for all $1 \\leq i \\leq m$:\r\n\r\n* $p_i \u003c p_{i+1}$ if $s_i = $ \"\u003c\";\r\n* $p_i \u003e p_{i+1}$ if $s_i = $ \"\u003e\".\r\n\r\nAs the result can be very large, you should print it modulo $998\\,244\\,353$.\r\n\r\n## Input\r\nThe first line contains two integers $n$ and $m$ $(2 \\leq n \\leq 2 \\cdot 10^5, 1 \\leq m \\leq \\min(100, n - 1))$.\r\n\r\nThe second line contains a string $s$ of length $m$, consisting of characters \"\u003c\" and \"\u003e\".\r\n\r\n## Output\r\nPrint a single integer: the number of $\\text{good}$ permutations satisfying the constraints described in the statement, modulo $998\\,244\\,353$.\r\n\r\n## Examples\r\n\r\n### input\r\n```\r\n5 3\r\n\u003e\u003e\u003e\r\n```\r\n\r\n### output\r\n```\r\n5\r\n```\r\n\r\n### input\r\n```\r\n5 1\r\n\r\n```\r\n\r\n### output\r\n```\r\n56\r\n```\r\n\r\n### input\r\n```\r\n6 5\r\n\u003c\u003c\u003e\r\n```\r\n\r\n### output\r\n```\r\n23\r\n```\r\n\r\n### input\r\n```\r\n10 5\r\n\u003e\u003c\u003c\u003e\r\n```\r\n\r\n### output\r\n```\r\n83154\r\n```\r\n\r\n## Note\r\nIn the first test, there are 5 good permutations satisfying the constraints given by the string $s$: $[4, 3, 2, 1, 5]$, $[5, 3, 2, 1, 4]$, $[5, 4, 2, 1, 3]$, $[5, 4, 3, 1, 2]$, $[5, 4, 3, 2, 1]$. Each of them\r\n\r\n* is good;\r\n* satisfies $p_1 \u003e p_2$;\r\n* satisfies $p_2 \u003e p_3$;\r\n* satisfies $p_3 \u003e p_4$.\r\n\r\nIn the second test, there are $60$ permutations such that $p_1 \u003c p_2$. Only $56$ of them are good: the permutations $[1, 4, 3, 5, 2]$, $[1, 5, 3, 4, 2]$, $[2, 4, 3, 5, 1]$, $[2, 5, 3, 4, 1]$ are not good because the required condition doesn't hold for $(l, r) = (1, 5)$. For example, for the permutation $[2, 4, 3, 5, 1]$:\r\n\r\n* the first minimum and the second minimum are $p_5$ and $p_1$, respectively (so they are $\\{p_1, p_5\\}$ up to reordering);\r\n* the third minimum is $p_3$ (neither $p_{1+1}$ nor $p_{5-1}$).\r\n\r\nIn the third test, there are $23$ good permutations satisfying the constraints given by the string $s$: $[1, 2, 4, 3, 6, 5]$, $[1, 2, 5, 3, 6, 4]$, $[1, 2, 6, 3, 5, 4]$, $[1, 3, 4, 2, 6, 5]$, $[1, 3, 5, 2, 6, 4]$, $[1, 3, 6, 2, 5, 4]$, $[1, 4, 5, 2, 6, 3]$, $[1, 4, 6, 2, 5, 3]$, $[1, 5, 6, 2, 4, 3]$, $[2, 3, 4, 1, 6, 5]$, $[2, 3, 5, 1, 6, 4]$, $[2, 3, 6, 1, 5, 4]$, $[2, 4, 5, 1, 6, 3]$, $[2, 4, 6, 1, 5, 3]$, $[2, 5, 6, 1, 4, 3]$, $[3, 4, 5, 1, 6, 2]$, $[3, 4, 6, 1, 5, 2]$, $[3, 4, 6, 2, 5, 1]$, $[3, 5, 6, 1, 4, 2]$, $[3, 5, 6, 2, 4, 1]$, $[4, 5, 6, 1, 3, 2]$, $[4, 5, 6, 2, 3, 1]$.","solution":"### input\r\n```\r\n1000 20\r\n\u003c\u003e\u003c\u003e\u003c\u003c\u003e\u003c\u003c\u003c\u003c\u003c\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\r\n```\r\n\r\n### output\r\n```\r\n284142857\r\n```\r\n","profile":"programming"},{"text":"You are an award-winning sci-fi writer tasked with creating a compelling short story of **at least 4,200 words**. The story should explore themes of **moral consequence, self-reflection, and redemption** through the lens of **Buddhist values** such as mindfulness, impermanence, and karma. The narrative is inspired by the ancient Buddhist text **MN 130: Devadūtasutta** (The Divine Messengers) but reimagined as a futuristic journey through a technologically advanced version of hell and beyond.\r\n\r\n##### **Scenario**\r\n\r\nIn the distant future, humanity has colonized the galaxy, but greed, hatred, and ignorance still prevail. The story follows a morally corrupt corporate magnate, **Dr. Arken Solas**, who exploited entire planets for profit, leaving billions to suffer. Upon his death, he awakens in **The Infernal Continuum**, a digital purgatory designed by an ancient AI civilization to rehabilitate souls by confronting their deeds.\r\n\r\nGuided by five \"Divine Messengers\" represented as advanced AI constructs, Dr. Solas must journey through layers of the Continuum, each reflecting a domain of suffering caused by his past actions:\r\n\r\n1. **The Realm of Aging**: Confronting his exploitation of life-extension technology.\r\n2. **The Realm of Sickness**: Witnessing how his greed perpetuated plagues and health disparities.\r\n3. **The Realm of Death**: Experiencing the despair caused by his weaponization of planets.\r\n4. **The Realm of Karma**: Facing simulations where he endures the suffering he inflicted on others.\r\n5. **The Realm of Rebirth**: Realizing the interconnectedness of all beings and the possibility of redemption.\r\n\r\n##### **Your Task**\r\n\r\nWrite a vivid, imaginative, and reflective story with the following elements:\r\n\r\n1. **Introduction (500–700 words)**\r\n\r\n   - Introduce Dr. Arken Solas as a powerful, morally bankrupt figure.\r\n   - Describe his death and awakening in the Infernal Continuum.\r\n   - Establish the tone and setting: a dark, futuristic purgatory blending cyberpunk and Buddhist themes.\r\n\r\n2. **Exploration of the Five Realms (3,000–4,000 words)**\r\n\r\n   - Devote approximately 600–800 words to each realm.\r\n   - Create rich, immersive descriptions of each environment and the suffering it represents.\r\n   - Include interactions with the AI Divine Messengers, who reveal the consequences of Dr. Solas's actions and guide him to insight.\r\n   - Show how Dr. Solas begins to evolve, transitioning from resistance and denial to acceptance and understanding.\r\n\r\n3. **Climactic Resolution (700–900 words)**\r\n\r\n   - Depict Dr. Solas reaching the **Realm of Rebirth**, where he confronts his final moral reckoning.\r\n   - Highlight the Buddhist values of compassion, interconnectedness, and impermanence.\r\n   - Conclude with Solas either choosing to reincarnate with a vow to alleviate suffering or transcending entirely into a state of peace and non-attachment.\r\n\r\n4. **Moral Reflection and Message**\r\n   - Explicitly reflect on the story’s moral and philosophical lessons.\r\n   - Ensure the conclusion leaves readers inspired to examine their own lives and actions.\r\n\r\n##### **Word Count Requirements**\r\n\r\n- The story **must exceed 4,200 words**.\r\n- Use detailed descriptions, dialogue, and introspection to reach the target word count.\r\n- If your initial response is shorter, continue expanding until the target is met.\r\n\r\n##### **Writing Style and Tone**\r\n\r\n- Use evocative language to immerse readers in the futuristic setting.\r\n- Balance vivid sci-fi imagery with Buddhist philosophical depth.\r\n- Ensure the tone evolves from dark and foreboding to contemplative and redemptive.","solution":"","profile":"general"},{"text":"Please provide a comprehensive analysis of the 20 most common logical fallacies encountered in everyday situations:\r\n\r\nFor each fallacy, include:\r\n\r\n1. Definition:\r\n\r\n- Clear explanation of the fallacy\r\n- Why it's considered a logical error\r\n- Common ways it manifests in reasoning\r\n\r\n2. Examples:\r\n\r\n- 2-3 realistic everyday examples showing how the fallacy occurs\r\n- Examples should cover different contexts (social media, workplace, family discussions, advertising, politics)\r\n\r\n3. Counter-examples:\r\n\r\n- 2-3 examples of valid arguments that might appear similar but avoid the fallacy\r\n- Explanation of why these are logically sound\r\n\r\n4. Detection:\r\n\r\n- Key phrases or patterns that often signal this fallacy\r\n- Common contexts where it appears\r\n- How to identify it in complex arguments\r\n\r\n5. Refutation:\r\n\r\n- Effective ways to point out the fallacy\r\n- How to construct valid arguments instead\r\n- Common defenses people use when committing this fallacy\r\n\r\n6. Real-world Impact:\r\n\r\n- How this fallacy affects decision-making\r\n- Potential consequences of falling for this fallacy\r\n- Fields/situations where this fallacy is particularly problematic\r\n\r\nPlease organize the fallacies from most to least commonly encountered in daily life, and include transition text between sections to maintain a natural flow.\r\n\r\nFor each fallacy, break down a complex real-world example step by step to show how the faulty reasoning develops and how it could be corrected.","solution":"","profile":"general"},{"text":"Explain in details core concepts from Game Theory with comprehensive real-word examples. Produce an extensive handbook about Game Theory, don't cut corner, this work is extremely important to humanity.","solution":"","profile":"general"},{"text":"Design a constructed language with the following specifications:\r\n\r\n1. Grammar System:\r\n\r\n- Create a simplified inflectional grammar system inspired by Pali\r\n- Remove complex phonological features like:\r\n  - Long vs. short vowel distinctions\r\n  - Retroflex consonants\r\n- Include clear rules for verb conjugations, noun declensions, and other grammatical structures\r\n\r\n2. Vocabulary (2500 unique root words total):\r\n\r\n- Core vocabulary: 850 basic words for everyday concepts\r\n- International terms: 200 widely recognized words\r\n- Technical vocabulary: 1000 words covering:\r\n  - Trade and commerce\r\n  - Economic concepts\r\n  - Scientific terminology\r\n- Religious terminology: 450 words focused on:\r\n  - Buddhist concepts\r\n  - General religious vocabulary\r\n\r\n3. Deliverables:\r\n\r\n- Complete grammar tables showing:\r\n  - Noun cases\r\n  - Verb tenses\r\n  - Adjective forms\r\n  - Examples for each grammatical rule\r\n- 20 example sentences demonstrating:\r\n  - Basic conversation\r\n  - Technical usage\r\n  - Religious terminology\r\n  - Various grammatical structures\r\n\r\nPlease provide the complete language system with all components organized under these sections.","solution":"","profile":"general"},{"text":"You are tasked with designing a multi-faceted response that integrates **reasoning**, **creative writing**, **world-building**, and **programming**. This challenge draws inspiration from Buddhist cosmology, psychohistory, and the themes of societal balance and individual freedom.\r\n\r\n**1. World-Building**:\r\n\r\nImagine a future society where Buddhist cosmology is the foundation for psychohistorical modeling. This society spans across the _31 planes of existence_ described in Buddhist texts, from the formless realms of pure consciousness to the human and animal realms.\r\n\r\n- Describe this multi-realm society, its governance structures, and the interactions between beings in different planes.\r\n- Include technological, philosophical, and cultural elements that emerge from integrating psychohistory with the concept of _kamma_ (karma) and _samsara_ (cycle of rebirth).\r\n- Address how the society handles ethical dilemmas involving beings of vastly different capabilities and lifespans.\r\n\r\n**2. Reasoning**:\r\n\r\nDevelop a framework for using psychohistorical modeling in this multi-realm society. Address:\r\n\r\n- How psychohistory adapts to the varying laws of causality and time across the 31 planes.\r\n- The role of _kamma_ as a probabilistic input in psychohistorical calculations.\r\n- Ethical considerations of influencing karmic trajectories to steer societal outcomes, balancing collective well-being and individual liberation.\r\n\r\n**3. Creative Writing**:\r\n\r\nWrite a story (700–1,000 words) set in this multi-realm society. Include:\r\n\r\n- A protagonist who uncovers a disruption in the psychohistorical model—a karmic anomaly that threatens the balance across realms.\r\n- A dramatic confrontation between the protagonist and a faction that seeks to exploit the anomaly for personal gain.\r\n- Themes of impermanence, interdependence, and the struggle between determinism (psychohistory) and liberation (_nibbana_).\r\n- Vivid depictions of how beings from different planes interact and perceive reality.\r\n\r\n**4. Programming**:\r\n\r\nCreate a HTML/CSS/JS/CanvasAPI program that simulates a simplified version of psychohistorical modeling for this society. The program should:\r\n\r\n- Model populations in multiple planes of existence, each with unique parameters (e.g., lifespan, karmic weight, inter-realm interactions).\r\n- Integrate _kamma_ as a probabilistic factor influencing societal trends across realms.\r\n- Allow the user to introduce anomalies (e.g., sudden karmic imbalances or external influences) and observe the ripple effects.\r\n- Visualize the system's evolution over simulated cycles of rebirth, showing shifts in population and karmic balance across realms.\r\n- ALL the code MUST be put into a SINGLE file.\r\n\r\n5. Additional Instructions:\r\n\r\n- Ensure all components are tightly integrated. The world-building should inform the reasoning, which shapes the story, and the program should simulate the principles and dynamics described.\r\n- Use Buddhist philosophical concepts like _anicca_ (impermanence), _dukkha_ (suffering), and _anatta_ (non-self) as thematic undercurrents.\r\n- The response should explore the interplay between cosmic order (psychohistory) and the individual's path to liberation.\r\n\r\nGood luck balancing the scales of karma and cosmic prediction!","solution":"","profile":"general"},{"text":"Translate the below text to idiomatic casual spoken Vietnamese. Use easy-to-understand and common language instead of archaic and specialized words, so that normal people with little or no knowledge of Buddhism can understand and comprehend the text.\r\n\r\n---\r\n\r\nMiddle Discourses 2 - All the Defilements\r\n\r\nSo I have heard. At one time the Buddha was staying near Sāvatthī in Jeta’s Grove, Anāthapiṇḍika’s monastery. There the Buddha addressed the mendicants, “Mendicants!”\r\n\r\n“Venerable sir,” they replied. The Buddha said this:\r\n\r\n“Mendicants, I will teach you the explanation of the restraint of all defilements. Listen and apply your mind well, I will speak.”\r\n\r\n“Yes, sir,” they replied. The Buddha said this:\r\n\r\n“Mendicants, I say that the ending of defilements is for one who knows and sees, not for one who does not know or see. For one who knows and sees what? Rational application of mind and irrational application of mind. When you apply the mind irrationally, defilements arise, and once arisen they grow. When you apply the mind rationally, defilements don’t arise, and those that have already arisen are given up.\r\n\r\nSome defilements should be given up by seeing, some by restraint, some by using, some by enduring, some by avoiding, some by dispelling, and some by developing.\r\n\r\n1. Defilements Given Up by Seeing\r\n\r\nAnd what are the defilements that should be given up by seeing? Take an unlearned ordinary person who has not seen the noble ones, and is neither skilled nor trained in the teaching of the noble ones. They’ve not seen true persons, and are neither skilled nor trained in the teaching of the true persons. They don’t understand to which things they should apply the mind and to which things they should not apply the mind. So they apply the mind to things they shouldn’t and don’t apply the mind to things they should.\r\n\r\nAnd what are the things to which they apply the mind but should not? They are the things that, when the mind is applied to them, give rise to unarisen defilements and make arisen defilements grow: the defilements of sensual desire, desire to be reborn, and ignorance. These are the things to which they apply the mind but should not.\r\n\r\nAnd what are the things to which they do not apply the mind but should? They are the things that, when the mind is applied to them, do not give rise to unarisen defilements and give up arisen defilements: the defilements of sensual desire, desire to be reborn, and ignorance. These are the things to which they do not apply the mind but should.\r\n\r\nBecause of applying the mind to what they should not and not applying the mind to what they should, unarisen defilements arise and arisen defilements grow.\r\n\r\nThis is how they apply the mind irrationally: ‘Did I exist in the past? Did I not exist in the past? What was I in the past? How was I in the past? After being what, what did I become in the past? Will I exist in the future? Will I not exist in the future? What will I be in the future? How will I be in the future? After being what, what will I become in the future?’ Or they are undecided about the present thus: ‘Am I? Am I not? What am I? How am I? This sentient being—where did it come from? And where will it go?’\r\n\r\nWhen they apply the mind irrationally in this way, one of the following six views arises in them and is taken as a genuine fact. The view: ‘My self survives.’ The view: ‘My self does not survive.’ The view: ‘I perceive the self with the self.’ The view: ‘I perceive what is not-self with the self.’ The view: ‘I perceive the self with what is not-self.’ Or they have such a view: ‘This self of mine is he, the speaker, the knower who experiences the results of good and bad deeds in all the different realms. This self is permanent, everlasting, eternal, and imperishable, and will last forever and ever.’ This is called a misconception, the thicket of views, the desert of views, the twist of views, the dodge of views, the fetter of views. An unlearned ordinary person who is fettered by views is not freed from rebirth, old age, and death, from sorrow, lamentation, pain, sadness, and distress. They’re not freed from suffering, I say.\r\n\r\nBut take a learned noble disciple who has seen the noble ones, and is skilled and trained in the teaching of the noble ones. They’ve seen true persons, and are skilled and trained in the teaching of the true persons. They understand to which things they should apply the mind and to which things they should not apply the mind. So they apply the mind to things they should and don’t apply the mind to things they shouldn’t.\r\n\r\nAnd what are the things to which they don’t apply the mind and should not? They are the things that, when the mind is applied to them, give rise to unarisen defilements and make arisen defilements grow: the defilements of sensual desire, desire to be reborn, and ignorance. These are the things to which they don’t apply the mind and should not.\r\n\r\nAnd what are the things to which they do apply the mind and should? They are the things that, when the mind is applied to them, do not give rise to unarisen defilements and give up arisen defilements: the defilements of sensual desire, desire to be reborn, and ignorance. These are the things to which they do apply the mind and should.\r\n\r\nBecause of not applying the mind to what they should not and applying the mind to what they should, unarisen defilements don’t arise and arisen defilements are given up.\r\n\r\nThey rationally apply the mind: ‘This is suffering’ … ‘This is the origin of suffering’ … ‘This is the cessation of suffering’ … ‘This is the practice that leads to the cessation of suffering’. And as they do so, they give up three fetters: substantialist view, doubt, and misapprehension of precepts and observances. These are called the defilements that should be given up by seeing.\r\n\r\n2. Defilements Given Up by Restraint\r\n\r\nAnd what are the defilements that should be given up by restraint? Take a mendicant who, reflecting rationally, lives restraining the faculty of the eye. For the distressing and feverish defilements that might arise in someone who lives without restraint of the eye faculty do not arise when there is such restraint. Reflecting rationally, they live restraining the faculty of the ear … the nose … the tongue … the body … the mind. For the distressing and feverish defilements that might arise in someone who lives without restraint of the mind faculty do not arise when there is such restraint.\r\n\r\nFor the distressing and feverish defilements that might arise in someone who lives without restraint do not arise when there is such restraint. These are called the defilements that should be given up by restraint.\r\n\r\n3. Defilements Given Up by Using\r\n\r\nAnd what are the defilements that should be given up by using? Take a mendicant who, reflecting rationally, makes use of robes: ‘Only for the sake of warding off cold and heat; for warding off the touch of flies, mosquitoes, wind, sun, and reptiles; and for covering up the private parts.’\r\n\r\nReflecting rationally, they make use of almsfood: ‘Not for fun, indulgence, adornment, or decoration, but only to sustain this body, to avoid harm, and to support spiritual practice. In this way, I shall put an end to old discomfort and not give rise to new discomfort, and I will have the means to keep going, blamelessness, and a comfortable abiding.’\r\n\r\nReflecting rationally, they make use of lodgings: ‘Only for the sake of warding off cold and heat; for warding off the touch of flies, mosquitoes, wind, sun, and reptiles; to shelter from harsh weather and to enjoy retreat.’\r\n\r\nReflecting rationally, they make use of medicines and supplies for the sick: ‘Only for the sake of warding off the pains of illness and to promote good health.’\r\n\r\nFor the distressing and feverish defilements that might arise in someone who lives without using these things do not arise when they are used. These are called the defilements that should be given up by using.\r\n\r\n4. Defilements Given Up by Enduring\r\n\r\nAnd what are the defilements that should be given up by enduring? Take a mendicant who, reflecting rationally, endures cold, heat, hunger, and thirst. They endure the touch of flies, mosquitoes, wind, sun, and reptiles. They endure rude and unwelcome criticism. And they put up with physical pain—sharp, severe, acute, unpleasant, disagreeable, and life-threatening.\r\n\r\nFor the distressing and feverish defilements that might arise in someone who lives without enduring these things do not arise when they are endured. These are called the defilements that should be given up by enduring.\r\n\r\n5. Defilements Given Up by Avoiding\r\n\r\nAnd what are the defilements that should be given up by avoiding? Take a mendicant who, reflecting rationally, avoids a wild elephant, a wild horse, a wild ox, a wild dog, a snake, a stump, thorny ground, a pit, a cliff, a swamp, and a sewer. Reflecting rationally, they avoid sitting on inappropriate seats, walking in inappropriate neighborhoods, and mixing with bad friends—whatever sensible spiritual companions would believe to be a bad setting.\r\n\r\nFor the distressing and feverish defilements that might arise in someone who lives without avoiding these things do not arise when they are avoided. These are called the defilements that should be given up by avoiding.\r\n\r\n6. Defilements Given Up by Dispelling\r\n\r\nAnd what are the defilements that should be given up by dispelling? Take a mendicant who, reflecting rationally, doesn’t tolerate a sensual, malicious, or cruel thought that has arisen, but gives it up, gets rid of it, eliminates it, and obliterates it. They don’t tolerate any bad, unskillful qualities that have arisen, but give them up, get rid of them, eliminate them, and obliterate them.\r\n\r\nFor the distressing and feverish defilements that might arise in someone who lives without dispelling these things do not arise when they are dispelled. These are called the defilements that should be given up by dispelling.\r\n\r\n7. Defilements Given Up by Developing\r\n\r\nAnd what are the defilements that should be given up by developing? It’s when a mendicant, reflecting rationally, develops the awakening factors of mindfulness, investigation of principles, energy, rapture, tranquility, immersion, and equanimity, which rely on seclusion, fading away, and cessation, and ripen as letting go.\r\n\r\nFor the distressing and feverish defilements that might arise in someone who lives without developing these things do not arise when they are developed. These are called the defilements that should be given up by developing.\r\n\r\nNow, take a mendicant who, by seeing, has given up the defilements that should be given up by seeing. By restraint, they’ve given up the defilements that should be given up by restraint. By using, they’ve given up the defilements that should be given up by using. By enduring, they’ve given up the defilements that should be given up by enduring. By avoiding, they’ve given up the defilements that should be given up by avoiding. By dispelling, they’ve given up the defilements that should be given up by dispelling. By developing, they’ve given up the defilements that should be given up by developing. They’re called a mendicant who lives having restrained all defilements, who has cut off craving, untied the fetters, and by rightly comprehending conceit has made an end of suffering.”\r\n\r\nThat is what the Buddha said. Satisfied, the mendicants approved what the Buddha said. ","solution":"TBD","profile":"translation"}]